#!/bin/bash
clear
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mvocê precisa executar como root\033[0m"
    rm $HOME/bashc/linux/ubuntu >/dev/null 2>&1
    rm $HOME/Pro >/dev/null 2>&1
    rm $HOME/wget-log >/dev/null 2>&1
    rm $HOME/.bash_history >/dev/null 2>&1
    exit 0
}
_lnk='scriptpromax.elijahssh.shop'; _Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×'|sed -e 's/[^a-z/]//ig'); _1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×'|sed -e 's/[^a-z/]//ig')
cd $HOME
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y >/dev/null 2>&1
        ${comando[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "\033[1;33mAGUARDE \033[1;37m- \033[1;33m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[1;34m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;33m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "\033[1;33mAGUARDE \033[1;37m- \033[1;33m["
    done
    echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}
function verif_key() {
    krm=$(echo '5:q-3gs2.o7%8:1' | rev)
    chmod +x $_Ink/lisa >/dev/null 2>&1
    [[ ! -e "$_Ink/lisa" ]] && {
        echo -e "\n\033[1;31mKEY INVÁLIDA!\033[0m"
        rm -rf $HOME/bashc/linux/ubuntu >/dev/null 2>&1
        sleep 2
        clear
        exit 1
    }
}
function verif_key2() {
    krm=$(echo '5:q-3gs2.o7%8:1' | rev)
    chmod +x $_Ink/lisaARM >/dev/null 2>&1
    [[ ! -e "$_Ink/lisaARM" ]] && {
        echo -e "\n\033[1;31mKEY INVÁLIDA!\033[0m"
        rm -rf $HOME/bashc/linux/ubuntu >/dev/null 2>&1
        sleep 2
        clear
        exit 1
    }
}

otimize_python() {
    # INSTALA PYTHON AO PYTHON2
    apt-get install python -y >/dev/null 2>&1
    apt-get install python2 -y >/dev/null 2>&1
    # INSTALA PYTHON3.6 AO PYTHON3.9
    apt-get install python3.6 -y >/dev/null 2>&1
    apt-get install python3.7 -y >/dev/null 2>&1
    apt-get install python3.8 -y >/dev/null 2>&1
    apt-get install python3.9 -y >/dev/null 2>&1
    # CRIA ALTERNATIVAS PYTHON
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4 >/dev/null 2>&1
    # INSTALA PIP
    apt install pip -y
    apt install python3-pip -y
    # INSTALA SOCAT
    apt install socat -y
}
rm $HOME/Pro >/dev/null 2>&1
rm $HOME/wget-log >/dev/null 2>&1
rm $HOME/.bash_history >/dev/null 2>&1
apt-get install figlet
clear
apt install speedtest-cli
clear
apt-get install vnstat
clear
snap install lolcat
clear
system=$(cat /etc/issue.net)
date=$(date '+%d-%m-%Y <> %H:%M:%S')
_hora=$(printf '%(%H:%M:%S)T')
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
echo -e "\033[97m$system         $date"
echo -e "\033[01;97m║ \033[44;1;97m▬▬▬▬▬▬▬▬▬ ● INSTALADOR SSH PRO MAX ● ▬▬▬▬▬▬▬▬\033[0m \033[01;97m║"
echo -e "\033[01;97m║                                               ║"
echo -e "\033[01;97m║ \033[1;32m < 01 > \033[01;97m ● INSTALAR SCRIPT                    ║\033[0m"
echo -e "\033[01;97m║ \033[1;32m < 02 > \033[0m\033[01;97m ● CANCELAR                           ║\033[0m"
echo -e "\033[1;97m╠━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═\033[0m\033[01;97m║" | lolcat -t
echo -e "\033[3;32m                                     VERSAO 3.0.1"
echo -ne "\033[1;97mESCOLHA UMA OPCAO\033[1;33m\033[1;31m\033[1;34m : \033[1;32m"
read resposta
if [[ "$resposta" = '1' ]]; then
clear
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
echo -e "\033[97m$system         $date"
echo -e "\033[01;97m║ \033[44;1;97m▬▬▬▬▬▬▬▬▬ ● INSTALADOR SSH PRO MAX ● ▬▬▬▬▬▬▬▬\033[0m \033[01;97m║"
echo ""
echo -ne "\033[1;33mVAMOS INICIAR A INSTALACAO:"
echo ""
echo -ne "\033[1;32mINFORME SUA KEY:\033[1;37m "; read key
_lnk2=$(echo "$key"|awk -F : '{print $2}'); _lnk1=$(echo "$key"|awk -F : '{print $1}')
echo -e "\n\033[1;32mVERIFICANDO... \033[1;37m $key\033[0m" ; rm $_Ink/lisa > /dev/null 2>&1; wget -P $_Ink $_lnk/$_lnk1/$_lnk2/lisa > /dev/null 2>&1; verif_key
echo ""
echo -e "\n\033[1;32mKEY VALIDA!\033[1;32m"
sleep 3s
    clear
    echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
echo -e "\033[97m$system         $date"
echo -e "\033[01;97m║ \033[44;1;97m▬▬▬▬▬▬▬▬▬ ● INSTALADOR SSH PRO MAX ● ▬▬▬▬▬▬▬▬\033[0m \033[01;97m║"
    echo ""
    echo -e "\033[1;33mINSTALANDO O SSH PRO MAX...\033[0m"
    echo ""
    fun_install() {
        apt-get update -y
        [[ ! -d /usr/share/.ubuntu ]] && mkdir /usr/share/.ubuntu
        echo "crz: $(date)" >/usr/share/.ubuntu/.ubuntu   
        _pacotes=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip" "python" "at")
        for _prog in ${_pacotes[@]}; do
            apt install $_prog -y
        done
        apt install speedtest-cli
        apt install build-essential       
    [[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp
    ufw allow 80/tcp
    ufw allow 3128/tcp
    ufw allow 8799/tcp
    ufw allow 8080/tcp   
    otimize_python   
    $_Ink/lisa $_lnk $_Ink $_1nk $key
    }
    fun_bar 'fun_install'
    echo ""
    cd $HOME
    echo -e "\033[1;32mINSTALACAO CONCLUIDA!\033[0m"
    echo ""
    echo -e "\033[1;32mENTER \033[1;33mPARA IR AO \033[1;32mMENU\033[1;31m" && read enter
rm $HOME/bashc/linux/ubuntu && cat /dev/null >~/.bash_history && history -c
rm $HOME/Pro >/dev/null 2>&1
rm $HOME/wget-log >/dev/null 2>&1
rm $HOME/.bash_history >/dev/null 2>&1
menu
elif [[ "$resposta" = '2' ]]; then
echo ""
echo -e "\n\033[1;32mCANCELANDO A INSTALACAO\033[1;32m"
sleep 3s
rm $HOME/bashc/linux/ubuntu && cat /dev/null >~/.bash_history && history -c
rm $HOME/Pro >/dev/null 2>&1
rm $HOME/wget-log >/dev/null 2>&1
rm $HOME/.bash_history >/dev/null 2>&1
exit

else

    echo ""
    echo -e "\033[1;31mOPCAO INVALIDA!\033[0m"
    sleep 1
    exit
fi
