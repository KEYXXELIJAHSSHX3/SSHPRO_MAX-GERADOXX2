#!/bin/bash
clear
system=$(cat /etc/issue.net)
date=$(date '+%d-%m-%Y <> %H:%M:%S')
_hora=$(printf '%(%H:%M:%S)T')
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y >/dev/null 2>&1
        ${comando[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "\033[1;33mAGUARDE \033[1;37m- \033[1;33m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[1;34m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;33m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "\033[1;33mAGUARDE \033[1;37m- \033[1;33m["
    done
    echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}
rootpass () {
clear
[[ "$(whoami)" != "root" ]] && {
	clear
	echo -e "\033[1;31mEXECULTE COMO USUARIO ROOT, \033[1;32m(\033[1;33msudo -i\033[1;32m)\033[0m"
	exit
}
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
echo -e "\033[97m$system         $date"
echo -e "\033[01;97m║ \033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬ ● HABILITANDO ROOT ● ▬▬▬▬▬▬▬▬▬▬▬\033[0m \033[01;97m║"
echo ""
echo -e "\033[1;33mHABILITANDO ACESSO AGUARDE...\033[0m"
echo ""
fun_ace () {
[[ $(grep -c "prohibit-password" /etc/ssh/sshd_config) != '0' ]] && {
	sed -i "s/prohibit-password/yes/g" /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "without-password" /etc/ssh/sshd_config) != '0' ]] && {
	sed -i "s/without-password/yes/g" /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "#PermitRootLogin" /etc/ssh/sshd_config) != '0' ]] && {
	sed -i "s/#PermitRootLogin/PermitRootLogin/g" /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "PasswordAuthentication" /etc/ssh/sshd_config) = '0' ]] && {
	echo 'PasswordAuthentication yes' > /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "PasswordAuthentication no" /etc/ssh/sshd_config) != '0' ]] && {
	sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
} > /dev/null
[[ $(grep -c "#PasswordAuthentication no" /etc/ssh/sshd_config) != '0' ]] && {
	sed -i "s/#PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
} > /dev/null
service ssh restart > /dev/null
iptables -F
iptables -A INPUT -p tcp --dport 81 -j ACCEPT
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -p tcp --dport 443 -j ACCEPT
iptables -A INPUT -p tcp --dport 8799 -j ACCEPT
iptables -A INPUT -p tcp --dport 8080 -j ACCEPT
iptables -A INPUT -p tcp --dport 1194 -j ACCEPT
}
fun_bar 'fun_ace'
echo ""
echo -ne "\033[1;32mDEFINA UMA SENHA ROOT\033[1;37m: "; read senha
[[ -z "$senha" ]] && {
echo -e "\n\033[1;31mSENHA INVALIDA !\033[0m"
keyscript
}
echo "root:$senha" | chpasswd
echo ""
echo -e "\033[1;32mSENHA DEFINIDA\033[0m"
sleep 3s
keyscript
}
root () {
clear
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
echo -e "\033[97m$system         $date"
echo -e "\033[01;97m║ \033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬ ● ALTERAR SENHA ROOT ● ▬▬▬▬▬▬▬▬▬▬\033[0m \033[01;97m║"
echo ""
echo -e "\033[1;32mDIGITE A NOVA SENHA:\033[1;33m "
read  -p : pass
(echo $pass; echo $pass)|passwd 2>/dev/null
sleep 1s
echo -e "\033[1;32mSENHA ALTERADA COM SUCESSO!\033[0m"
sleep 5s
systemctl restart sshd
cd
clear
keyscript
}
while true $x != "ok"
do
clear
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo -e "\033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬▬▬ ●●● SSH PRO MAX ●●● ▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;36m\033[0m"
echo -e "\033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\033[1;97m ☆☆☆☆☆   \033[1;32m▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬"
echo ""
echo -e "\033[97m$system         $date"
echo -e "\033[01;97m║ \033[44;1;97m▬▬▬▬▬▬▬▬▬▬▬▬ ● GERENCIADOR ROOT ● ▬▬▬▬▬▬▬▬▬▬▬\033[0m \033[01;97m║"
echo -e "\033[01;97m║                                               ║"
echo -e "\033[01;97m║ \033[1;32m < 01 > \033[01;97m ● HABILITAR ACESSO ROOT              ║\033[0m"
echo -e "\033[01;97m║ \033[1;32m < 02 > \033[0m\033[01;97m ● ALTERAR SENHA ROOT                 ║\033[0m"
echo -e "\033[01;97m║ \033[1;32m < 00 > \033[0m\033[01;97m ● VOLTAR                             ║\033[0m"
echo -e "\033[1;97m╠━═━═━═━═━═━═━═━━═━═━═━═━═━═━═━═━━═━═━═━═━═━━═━═\033[0m\033[01;97m║" | lolcat -t
echo -e "\033[3;32m                                     VERSAO 3.0.1"
			tput civis
echo -ne "\033[1;97mESCOLHA UMA OPCAO\033[1;33m\033[1;31m\033[1;34m : \033[1;32m"; read x
case "$x" in 
   1 | 01)
   clear
   rootpass
   exit;
   ;;
   2 | 02)
   clear
   root
   exit;
   ;;
   0 | 00)
   echo -e "\033[1;31mSaindo...\033[0m"
   sleep 2s
   clear
   keyscript
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2s
   keyscript
esac
done
}
#fim
